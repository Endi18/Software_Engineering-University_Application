<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>56</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>