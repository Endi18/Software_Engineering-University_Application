<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        44VlpO4+OKm0qCdY/fdSnK3ktW5pqC4rcpkE1NiQWYSdrSAkVnpVXSvcLOOioGNabgJSlKxK9KUpREpS
        lESlKURMUxSlVRMUxSlESmKUoiYHlTFKURMUxSlETA8qYpSiJSlKoiUpSiJSlKIuNlcRfRlEfR+7H7fH
        /wBaiK4qYOPov4j5aUqVR0VO4XLfM+65T55BuK8+tf3V8R8lPWv7q+I+SlKzbBTdnzPusW0S8/RPWv7q
        +I+SnrX91fEfJSlNgpuz5n3TaJefonrX91fEfJT1r+6viPkpSmwU3Z8z7ptEvP0T1r+6viPkp61/dXxH
        yUpTYKbs+Z902iXn6J61/dXxHyU9a/ur4j5KUpsFN2fM+6bRLz9E9a/ur4j5Ketf3V8R8lKU2Cm7Pmfd
        Nol5+ietf3V8R8lPWv7q+I+SlKbBTdnzPum0S8/RPWv7q+I+SnrX91fEfJSlNgpuz5n3TaJefonrX91f
        EfJT1r+6viPkpSmwU3Z8z7ptEvP0T1r+6viPkoOK2f6L+I+SlKbBTdnzPum0S8/RZEcUd/8ARmP+Y+Wp
        iOIO5IP0fjP7b5aUrXkooG7m+Z91mbPIeK//2Q==
</value>
  </data>
</root>